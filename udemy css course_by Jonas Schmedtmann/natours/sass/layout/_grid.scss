.row {
    max-width: $grid-width;
    /* trick to center block elements inside of other block elements.
    The bottom & the top is 0, and left & right is auto. */
    margin: 0 auto;

    // we select everything except the last child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }        
    }

    @include respond(tab-port) {
        max-width: 50rem; 
        // bottom-top: 0, sides: 3rem
        padding: 0 3rem;
    }  

    /* we created and included this clearfix because our row didn't keep it's height because of it's
    child elements that are floating.(you can find the @mixin clearfix in abstracts/_mixins.scss) 
    Try to comment the below line to see the difference. */
   @include clearfix;

   /* we select all the elements that have class that starts with col- (the little triangle: ^,  means= starts
   You can as well use other signs like the asterisc: *, that means contain, and
   the dolar sign: $, that means any class that end with col-.*/ 
   [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
   }  

    .col-1-of-2 {
        /* to do calculations we have to use the hash-tag and the curly braces */
        width: calc((100% - #{$gutter-horizontal})/ 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        // 2 times the width of the simple column plus the gutter
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    
    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
    
}